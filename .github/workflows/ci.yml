# GitHub Actions Workflow für Maven-Java-Projekt
# Baut, testet und sammelt Reports/Artefakte ein

name: Java CI

on:
  push:
    branches: [ main ]          # bei Push auf main
  pull_request:
    branches: [ main ]          # bei PRs gegen main

jobs:
  build-test-report:
    runs-on: ubuntu-latest

    steps:
      # 1) Repo auschecken
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 20 bereitstellen (Assignment fordert JDK 20)
      #    Dein Projekt kompiliert trotzdem mit --release 17 (pom steuert das)
      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '20'
          cache: maven           # Maven-Cache aktivieren

      # 3) Build + Tests + Site + Javadoc
      #    -U: Abhängigkeiten aktualisieren
      #    -B: Batch-Mode (sauberere Logs)
      #    -ntp: keine Transfer-Progress-Balken
      - name: Build, test, generate reports
        run: mvn -U -B -ntp clean verify site javadoc:javadoc

      # 4) Artefakte hochladen (zum Download im Actions-Run)
      #    4.1) JAR
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
          if-no-files-found: error
          retention-days: 7

      #    4.2) Gesamte Maven Site (enthält Surefire, JaCoCo, SpotBugs, Projektinfos)
      - name: Upload Maven Site
        uses: actions/upload-artifact@v4
        with:
          name: maven-site
          path: target/site/**
          if-no-files-found: error
          retention-days: 7

      #    4.3) Javadoc separat (praktisch für Pages/Weitergabe)
      - name: Upload Javadoc
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: target/site/apidocs/**
          if-no-files-found: error
          retention-days: 7

      #    4.4) JaCoCo separat (optional, schneller Zugriff)
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/**
          if-no-files-found: warn
          retention-days: 7

      #    4.5) SpotBugs separat (optional)
      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: |
            target/site/spotbugs.html
            target/site/spotbugs/**
          if-no-files-found: warn
          retention-days: 7

      # 5) Optional: Javadoc für GitHub Pages bereitstellen (als Pages-Artefakt)
      - name: Upload Javadoc for Pages
        if: ${{ github.ref == 'refs/heads/main' }}   # nur auf main
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/site/apidocs

  # 6) Optional: Deployment auf GitHub Pages (aktiviert Pages-Hosting der Javadoc)
  deploy-pages:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-test-report
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
